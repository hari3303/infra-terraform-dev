name: 1 HUB INFRA - APPLY

on:
  workflow_dispatch:
    inputs:
      tfpath:
        description: 'TF File Path'
        required: false
        default: '1_devops_infra/2_hub_infra/1_hub_servers'
      infra:
        description: 'Jobs to execute (e.g., "apply_network" or "apply_network, apply_sg")'
        required: true
        #default: 'apply_network'

jobs:
  tf_code_check:
    name: Hub infra Terraform Validation and Build
    runs-on: ubuntu-latest

    if: ${{ inputs.tfpath }} 

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.5.0   

    # - name: AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'  # Access key for AWS authentication
    #     aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'  # Secret key for AWS authentication
    #     aws-region: us-east-1  # AWS region to operate in

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Terraform fmt
      id: fmt
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }} 
        echo "** Running Terraform fmt**"
        terraform fmt

    - name: Terraform init
      id: init
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }}
        echo "** Running Terraform Init**"
        terraform init

    - name: Terraform validate
      id: validate
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }}
        echo "** Running Terraform Validate**"
        terraform validate

    - name: Terraform Plan
      id: plan 
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }}
        echo "** Running Terraform Plan**"
        terraform plan --var-file=3hub.tfvars -target module.hub_network
      continue-on-error: true  # Continue to the next step even if there is a plan error

    # - name: Terraform apply
    #   id: Apply 
    #   run: |
    #     echo `pwd`
    #     echo "tfpath ${{ github.event.inputs.tfpath }}"
    #     cd ${{ github.event.inputs.tfpath }}
    #     echo "** Running Terraform apply**"
    #     terraform apply --var-file=3hub.tfvars --auto-approve -target module.hub_network
    #   #ontinue-on-error: true  # Continue to the next step even if there is a plan error

  apply_network:
    name: Terraform_apply_network
    runs-on: ubuntu-latest

    if: contains(github.event.inputs.infra, 'apply_network')

    steps:
      - name: Terraform apply network
        id: ApplyNetwork
        run: |
          echo `pwd`
          echo "tfpath ${{ github.event.inputs.tfpath }}"
          cd ${{ github.event.inputs.tfpath }}
          echo "** Running Terraform apply network**"
          terraform apply --var-file=3hub.tfvars --auto-approve -target module.hub_network
      # Continue-on-error: true  # Continue to the next step even if there is a plan error

 
  apply_sg:
    name: Terraform_apply_sg
    runs-on: ubuntu-latest

    if: contains(github.event.inputs.infra, 'apply_sg')

    steps:
      - name: Terraform apply sg
        id: ApplySg
        run: |
          echo `pwd`
          echo "tfpath ${{ github.event.inputs.tfpath }}"
          cd ${{ github.event.inputs.tfpath }}
          echo "** Running Terraform apply sg**"
          terraform apply --var-file=3hub.tfvars --auto-approve -target module.sg
      # Continue-on-error: true  # Continue to the next step even if there is a plan error
