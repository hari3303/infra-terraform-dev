name: 2 NON PROD INFRA - APPLY

on:
  workflow_dispatch:
    # Inputs the workflow expects.
    inputs:
      tfpath:
        description: 'TF File Path'     
        required: false
        default: '1_devops_infra/3_spoke_infra/1_non_prod/1_non_prod_server'

jobs:
  tf_code_check:
    name: NON PROD infra Terraform Validation and Build
    runs-on: ubuntu-latest

    if: ${{ inputs.tfpath }} 

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.5.0   

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'  # Access key for AWS authentication
        aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'  # Secret key for AWS authentication
        aws-region: us-east-1  # AWS region to operate in
   
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Terraform fmt
      id: fmt
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }} 
        echo "** Running Terraform fmt**"
        terraform fmt

    - name: Terraform init
      id: init
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }}
        echo "** Running Terraform Init**"
        terraform init

    - name: Terraform validate
      id: validate
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }}
        echo "** Running Terraform Validate**"
        terraform validate

    - name: Terraform Plan
      id: plan 
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }}
        echo "** Running Terraform Plan**"
        terraform plan --var-file=3nonprod.tfvars -target module.non_prod_network
      continue-on-error: true  # Continue to the next step even if there is a plan error

    - name: Terraform apply
      id: Apply 
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        cd ${{ github.event.inputs.tfpath }}
        echo "** Running Terraform apply**"
        terraform apply --var-file=3nonprod.tfvars --auto-approve -target module.non_prod_network
      #continue-on-error: true  # Continue to the next step even if there is a plan error

   
    
